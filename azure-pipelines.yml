# Azure DevOps Pipeline for ASP.NET Web Application
# Deploy to Azure App Service

trigger:
- main
- develop

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  azureSubscription: 'YOUR_AZURE_SERVICE_CONNECTION'  # Replace with your service connection name
  appName: 'YOUR_APP_SERVICE_NAME'  # Replace with your App Service name
  resourceGroupName: 'YOUR_RESOURCE_GROUP'  # Replace with your resource group name

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build Job'
    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Install NuGet'

    - task: NuGetCommand@2
      displayName: 'Restore NuGet packages'
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      displayName: 'Build solution'
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployDefaultTarget=WebPublish /p:PublishUrl="$(build.artifactStagingDirectory)\WebApp"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      displayName: 'Run unit tests'
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*test*.dll
          !**\*TestAdapter.dll
          !**\obj\**
      continueOnError: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy to Azure App Service'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: 'webApp'
              appName: '$(appName)'
              resourceGroupName: '$(resourceGroupName)'
              package: '$(Pipeline.Workspace)/drop/WebApp.zip'
              deploymentMethod: 'auto'

- stage: PostDeploy
  displayName: 'Post-Deployment Verification'
  dependsOn: Deploy
  condition: succeeded()
  jobs:
  - job: HealthCheck
    displayName: 'Application Health Check'
    steps:
    - task: PowerShell@2
      displayName: 'Verify deployment'
      inputs:
        targetType: 'inline'
        script: |
          $appUrl = "https://$(appName).azurewebsites.net"
          Write-Host "Checking application health at: $appUrl"
          
          try {
            $response = Invoke-WebRequest -Uri $appUrl -UseBasicParsing -TimeoutSec 30
            if ($response.StatusCode -eq 200) {
              Write-Host "âœ“ Application is running successfully"
              Write-Host "Status Code: $($response.StatusCode)"
            } else {
              Write-Warning "Application returned status code: $($response.StatusCode)"
            }
          } catch {
            Write-Error "Failed to reach application: $($_.Exception.Message)"
            exit 1
          }